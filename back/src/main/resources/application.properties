# ===============================
# kafka
# ===============================

jsa.kafka.bootstrap-servers=localhost:9092
jsa.kafka.consumer.group-id=jsa-group
jsa.kafka.topic=jsa-kafka-topic

# ===============================
#database
# ===============================

spring.datasource.url = jdbc:mysql://localhost:3306/dbkafka?useSSL=false
# Username and password
spring.datasource.username = root
spring.datasource.password =
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# ===============================
#Chat
# ===============================

# max number of disallowed word before being banned
chat.max-profanity-level=5
chat.disallowed-words= pogba , ronaldo , messi 

# ===============================
#to ensure the new consumer group will get the messages we just sent
# ===============================

spring.kafka.consumer.auto-offset-reset=earlisest




